name: build
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: quiet-js

    - uses: mymindstorm/setup-emsdk@v7

    - name: "Build jansson wasm"
      run: |
        mkdir -p ${HOME}/opt
        wget https://digip.org/jansson/releases/jansson-2.13.tar.gz
        tar -xzf jansson-2.13.tar.gz
        cd jansson-2.13
        emconfigure ./configure --prefix=${HOME}/opt
        make
        make install
    
    - name: "Build libfec wasm"
      run: |
        mkdir -p ${HOME}/opt
        git clone https://github.com/quiet/libfec.git
        cd libfec
        emconfigure ./configure --prefix=${HOME}/opt
        sed -i 's/ldconfig//g' makefile
        make
        make install

    - name: "Build quiet-dsp wasm"
      run: |
        mkdir -p ${HOME}/opt
        git clone https://github.com/quiet/quiet-dsp.git
        cd quiet-dsp
        git checkout devel
        export EMCC_CFLAGS="-I${HOME}/opt/include -DLIBFEC_ENABLED=1"
        aclocal
        autoconf
        autoheader
        emconfigure ./configure --prefix=${HOME}/opt
        sed -i 's/ldconfig//g' makefile
        make
        make install
    
    - name: "Build quiet wasm"
      run: |
        mkdir -p ${HOME}/opt
        git clone https://github.com/quiet/quiet.git
        cd quiet
        git apply ../quiet-js/tools/quiet.patch
        mkdir -p build_js
        cd build_js
        emcmake cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/opt
        emmake make
        make install

    - name: "Build wasm for package"
      run: |
        em++ \
          -O2 \
          -I${HOME}/opt/include \
          -L${HOME}/opt/lib \
          -lquiet \
          -lliquid \
          -ljansson \
          -lfec \
          -o quiet-js/quiet.wasm \
          --no-entry \
          -s MODULARIZE=1 \
          -s STRICT=1 \
          -s EXPORTED_FUNCTIONS='["_free","_malloc","_quiet_encoder_clamp_frame_len","_quiet_encoder_create","_quiet_encoder_destroy","_quiet_encoder_emit","_quiet_encoder_get_frame_len","_quiet_encoder_profile_str","_quiet_encoder_send"]'

        cp ${HOME}/opt/share/quiet/quiet-profiles.json quiet-js
    
    - name: "Publish to npm"
      uses: JS-DevTools/npm-publish@v1
      with:
        package: "./quiet-js/package.json"
        token: ${{ secrets.NPM_TOKEN }}