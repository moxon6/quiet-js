const NullTerminator="\0",encode=e=>e.split("").map((e=>e.charCodeAt(0))),decode=e=>[...new Uint8Array(e)].map((e=>String.fromCharCode(e))).join("");function allocateArrayOnStack(e,t){const s=e.exports.stackAlloc(t.length);return new Int8Array(e.exports.memory.buffer).set(t,s),s}function allocateStringOnStack(e,t){return allocateArrayOnStack(e,(t+"\0").split("").map((e=>e.charCodeAt(0))))}function mallocArray(e,t){const s=t.exports.malloc(4*e);return{pointer:s,view:new Float32Array(t.exports.memory.buffer).subarray(s/4,s/4+e)}}class RingBuffer{constructor(e,t){this._readIndex=0,this._writeIndex=0,this._framesAvailable=0,this._channelCount=t,this._length=e,this._channelData=[];for(let t=0;t<this._channelCount;t+=1)this._channelData[t]=new Float32Array(e)}get framesAvailable(){return this._framesAvailable}push(e){const t=e[0].length;for(let s=0;s<t;s+=1){const t=(this._writeIndex+s)%this._length;for(let r=0;r<this._channelCount;r+=1)this._channelData[r][t]=e[r][s]}this._writeIndex+=t,this._writeIndex>=this._length&&(this._writeIndex=0),this._framesAvailable+=t,this._framesAvailable>this._length&&(this._framesAvailable=this._length)}pull(e){if(0===this._framesAvailable)return;const t=e[0].length;for(let s=0;s<t;s+=1){const t=(this._readIndex+s)%this._length;for(let r=0;r<this._channelCount;r+=1)e[r][s]=this._channelData[r][t]}this._readIndex+=t,this._readIndex>=this._length&&(this._readIndex=0),this._framesAvailable-=t,this._framesAvailable<0&&(this._framesAvailable=0)}}var importObject={env:{__sys_getpid:()=>null},wasi_snapshot_preview1:{proc_exit:()=>null,clock_time_get:()=>null,fd_close:()=>null,fd_write:()=>null,fd_seek:()=>null,fd_read:()=>null}};const sampleBufferSize=16384;class ReceiverWorklet extends AudioWorkletProcessor{constructor(e){super();const{quietModule:t,profile:s,sampleRate:r}=e.processorOptions;this.quietModule=t,this.profile=s,this.sampleRate=r,this.inputRingBuffer=new RingBuffer(16384,1),this.init()}async init(){return this.instance=await WebAssembly.instantiate(this.quietModule,importObject),await this.selectProfile(this.instance,this.profile),this}async selectProfile(e,t){const s=e.exports.stackSave(),r=allocateStringOnStack(e,JSON.stringify({profile:t})),i=allocateStringOnStack(e,"profile"),a=e.exports.quiet_decoder_profile_str(r,i);return this.decoder=e.exports.quiet_decoder_create(a,this.sampleRate),e.exports.free(a),this.samples=mallocArray(16384,this.instance),this.frame=e.exports.malloc(16384),e.exports.stackRestore(s),this}process(e,t){if(!e[0].length)return!0;const s=e[0],r=t[0][0];if(this.inputRingBuffer.push([...s]),this.inputRingBuffer.framesAvailable>=16384){this.inputRingBuffer.pull([this.samples.view]),this.bufferIndex=0,this.instance.exports.quiet_decoder_consume(this.decoder,this.samples.pointer,16384);const e=this.instance.exports.quiet_decoder_recv(this.decoder,this.frame,16384);if(-1!==e){const t=(i=new Int8Array(this.instance.exports.memory.buffer).slice(this.frame,this.frame+e).buffer,[...new Uint8Array(i)].map((e=>String.fromCharCode(e))).join(""));this.port.postMessage({type:"payload",value:t})}}var i;return r.forEach((e=>{for(let t=0;t<e.length;t+=1)e[t]=1})),!0}}registerProcessor("quiet-receiver-worklet",ReceiverWorklet);