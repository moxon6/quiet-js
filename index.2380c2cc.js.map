{"mappings":"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","sources":["node_modules/@moxon6/quiet-js/dist/index.js","node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-18e527fe3e6549f696829e10022a8837.js","node_modules/@parcel/runtime-js/lib/runtime-d313b40adf11654f7510f8db60b5b4bc.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-b540ae659ef8afb03bb79a03d7908fae.js","index.js"],"sourcesContent":["function resumeIfSuspended(audioCtx) {\n  if (audioCtx.state === 'suspended') {\n    audioCtx.resume();\n  }\n}\n\nfunction chunkBuffer(buffer, chunkSize) {\n  const res = [];\n  for (let i = 0; i < buffer.byteLength; i += chunkSize) {\n    const frame = buffer.slice(i, i + chunkSize);\n    res.push(frame);\n  }\n  return res;\n}\n\nconst NullTerminator = '\\0';\n\n// export const encode = (str) => new TextEncoder().encode(str);\n\n// TODO: Consolidate these\n\nconst encodeForTransmit = (str) => new TextEncoder().encode(str);\n\nconst encode = (str) => str.split('').map((x) => x.charCodeAt(0));\n\nfunction allocateArrayOnStack(instance, arr) {\n  const ret = instance.exports.stackAlloc(arr.length);\n  const HEAP8 = new Int8Array(instance.exports.memory.buffer);\n  HEAP8.set(arr, ret);\n  return ret;\n}\n\nfunction allocateStringOnStack(instance, string) {\n  return allocateArrayOnStack(instance, encode(string + NullTerminator));\n}\n\nfunction mallocArray(bufferSize, instance) {\n  const pointer = instance.exports.malloc(4 * bufferSize);\n  const HEAPF32 = new Float32Array(instance.exports.memory.buffer);\n  const view = HEAPF32.subarray(\n    (pointer / 4), (pointer / 4) + bufferSize,\n  );\n\n  return {\n    pointer,\n    view,\n  };\n}\n\nconst sampleBufferSize = 16384;\n\nconst waitUntil = (seconds) => new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n\nclass Transmitter {\n  constructor(audioContext, instance) {\n    this.destroyed = false;\n    this.audioContext = audioContext;\n    this.instance = instance;\n  }\n\n  selectProfile(profile, clampFrame) {\n    const stack = this.instance.exports.stackSave();\n\n    const cProfiles = allocateStringOnStack(this.instance, JSON.stringify({ profile }));\n    const cProfile = allocateStringOnStack(this.instance, 'profile');\n\n    const opt = this.instance.exports.quiet_encoder_profile_str(cProfiles, cProfile);\n\n    this.encoder = this.instance.exports.quiet_encoder_create(opt, this.audioContext.sampleRate);\n    this.instance.exports.free(opt);\n\n    this.frameLength = clampFrame\n      ? this.instance.exports.quiet_encoder_clamp_frame_len(this.encoder, sampleBufferSize)\n      : this.instance.exports.quiet_encoder_get_frame_len(this.encoder);\n\n    this.samples = mallocArray(sampleBufferSize, this.instance);\n\n    this.instance.exports.stackRestore(stack);\n    return this;\n  }\n\n  async transmit(buf) {\n    const stack = this.instance.exports.stackSave();\n\n    resumeIfSuspended(this.audioContext);\n\n    const payload = chunkBuffer(buf, this.frameLength);\n\n    let t = this.audioContext.currentTime;\n    for (const frame of payload) {\n      const audioBuffer = this\n        .audioContext\n        .createBuffer(1, sampleBufferSize, this.audioContext.sampleRate);\n\n      const framePointer = allocateArrayOnStack(this.instance, new Uint8Array(frame));\n      this.instance.exports.quiet_encoder_send(this.encoder, framePointer, frame.byteLength);\n      const written = this.instance.exports.quiet_encoder_emit(\n        this.encoder,\n        this.samples.pointer,\n        sampleBufferSize,\n      );\n\n      for (let i = written; i < sampleBufferSize; i += 1) {\n        this.samples.view[i] = 0;\n      }\n\n      audioBuffer.copyToChannel(this.samples.view, 0, 0);\n\n      const audioBufferNode = new AudioBufferSourceNode(this.audioContext);\n      audioBufferNode.buffer = audioBuffer;\n      audioBufferNode.connect(this.audioContext.destination);\n      audioBufferNode.start(t);\n      t += audioBuffer.duration;\n    }\n\n    this.instance.exports.stackRestore(stack);\n    await waitUntil(t - this.audioContext.currentTime);\n    return this;\n  }\n\n  destroy() {\n    if (!this.destroyed) {\n      this.instance.exports.free(this.samples.pointer);\n      this.instance.exports.quiet_encoder_destroy(this.encoder);\n      this.destroyed = true;\n    }\n    return this;\n  }\n}\n\nvar importObject = {\n  env: {\n    __sys_getpid: () => null,\n  },\n  wasi_snapshot_preview1: {\n    proc_exit: () => null,\n    clock_time_get: () => null,\n    fd_close: () => null,\n    fd_write: () => null,\n    fd_seek: () => null,\n    fd_read: () => null,\n  },\n};\n\nconst getUserAudio = () => navigator.mediaDevices.getUserMedia({\n  audio: {\n    echoCancellation: false,\n  },\n});\n\nclass Quiet {\n  constructor(audioContext, profile) {\n    this.audioContext = audioContext;\n    this.profile = profile;\n  }\n\n  async init() {\n    this.quietWasmBytes = await fetch(new URL('../quiet.wasm', import.meta.url))\n      .then((res) => res.arrayBuffer());\n\n    this.instance = (await WebAssembly.instantiate(this.quietWasmBytes, importObject)).instance;\n\n    if (typeof window !== 'undefined') {\n      const { audioWorklet } = this.audioContext;\n      await audioWorklet.addModule(new URL('./quiet.worklet.js', import.meta.url));\n\n      this.quietProcessorNode = new AudioWorkletNode(this.audioContext, 'quiet-processor-node', {\n        processorOptions: {\n          quietWasmBytes: this.quietWasmBytes,\n          profile: this.profile,\n          sampleRate: this.audioContext.sampleRate,\n        },\n      });\n    }\n\n    return this;\n  }\n\n  async transmit({ payload, clampFrame }) {\n    (\n      await new Transmitter(this.audioContext, this.instance)\n        .selectProfile(this.profile, clampFrame)\n        .transmit(encodeForTransmit(payload))\n    )\n      .destroy();\n  }\n\n  async receive(onReceive) {\n    this.audioStream = await getUserAudio();\n    const audioInput = this.audioContext.createMediaStreamSource(this.audioStream);\n    audioInput\n      .connect(this.quietProcessorNode)\n      .port\n      .onmessage = (e) => onReceive(e.data);\n    resumeIfSuspended(this.audioContext);\n  }\n}\n\nvar audible = {\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v27\",\n\touter_fec_scheme: \"none\",\n\tmod_scheme: \"gmsk\",\n\tframe_length: 25,\n\tmodulation: {\n\t\tcenter_frequency: 4200,\n\t\tgain: 0.15\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 10,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.35\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t}\n};\nvar ultrasonic = {\n\tmod_scheme: \"gmsk\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v27\",\n\touter_fec_scheme: \"none\",\n\tframe_length: 34,\n\tmodulation: {\n\t\tcenter_frequency: 19000,\n\t\tgain: 0.02\n\t},\n\tinterpolation: {\n\t\tshape: \"rrcos\",\n\t\tsamples_per_symbol: 14,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.35\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t}\n};\nvar quietProfiles = {\n\taudible: audible,\n\t\"audible-7k-channel-0\": {\n\tmod_scheme: \"arb16opt\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v29\",\n\touter_fec_scheme: \"rs8\",\n\tframe_length: 600,\n\tmodulation: {\n\t\tcenter_frequency: 9200,\n\t\tgain: 0.01\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 6,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.31\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t},\n\tofdm: {\n\t\tnum_subcarriers: 48,\n\t\tcyclic_prefix_length: 8,\n\t\ttaper_length: 4,\n\t\tleft_band: 0,\n\t\tright_band: 0\n\t}\n},\n\t\"audible-7k-channel-1\": {\n\tmod_scheme: \"arb16opt\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v29\",\n\touter_fec_scheme: \"rs8\",\n\tframe_length: 600,\n\tmodulation: {\n\t\tcenter_frequency: 15500,\n\t\tgain: 0.01\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 6,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.31\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t},\n\tofdm: {\n\t\tnum_subcarriers: 48,\n\t\tcyclic_prefix_length: 8,\n\t\ttaper_length: 4,\n\t\tleft_band: 0,\n\t\tright_band: 0\n\t}\n},\n\t\"cable-64k\": {\n\tmod_scheme: \"qam1024\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v27p23\",\n\touter_fec_scheme: \"rs8\",\n\tframe_length: 7500,\n\tmodulation: {\n\t\tcenter_frequency: 10200,\n\t\tgain: 0.09\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 2,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.35\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.03\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t},\n\tofdm: {\n\t\tnum_subcarriers: 128,\n\t\tcyclic_prefix_length: 16,\n\t\ttaper_length: 8,\n\t\tleft_band: 6,\n\t\tright_band: 12\n\t}\n},\n\t\"hello-world\": {\n\tmod_scheme: \"gmsk\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v27\",\n\touter_fec_scheme: \"none\",\n\tframe_length: 25,\n\tmodulation: {\n\t\tcenter_frequency: 4400,\n\t\tgain: 0.08\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 20,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.38\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t}\n},\n\tultrasonic: ultrasonic,\n\t\"ultrasonic-3600\": {\n\tofdm: {\n\t\tnum_subcarriers: 64,\n\t\tcyclic_prefix_length: 20,\n\t\ttaper_length: 8,\n\t\tleft_band: 4,\n\t\tright_band: 13\n\t},\n\tmod_scheme: \"V29\",\n\tchecksum_scheme: \"crc8\",\n\tinner_fec_scheme: \"v27\",\n\touter_fec_scheme: \"none\",\n\tframe_length: 550,\n\tmodulation: {\n\t\tcenter_frequency: 18500,\n\t\tgain: 0.01\n\t},\n\tinterpolation: {\n\t\tshape: \"kaiser\",\n\t\tsamples_per_symbol: 7,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.33\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t}\n},\n\t\"ultrasonic-whisper\": {\n\tmod_scheme: \"gmsk\",\n\tchecksum_scheme: \"crc32\",\n\tinner_fec_scheme: \"v27\",\n\touter_fec_scheme: \"none\",\n\tframe_length: 16,\n\tmodulation: {\n\t\tcenter_frequency: 19500,\n\t\tgain: 0.01\n\t},\n\tinterpolation: {\n\t\tshape: \"rrcos\",\n\t\tsamples_per_symbol: 30,\n\t\tsymbol_delay: 4,\n\t\texcess_bandwidth: 0.35\n\t},\n\tencoder_filters: {\n\t\tdc_filter_alpha: 0.01\n\t},\n\tresampler: {\n\t\tdelay: 13,\n\t\tbandwidth: 0.45,\n\t\tattenuation: 60,\n\t\tfilter_bank_size: 64\n\t}\n}\n};\n\nexport default Quiet;\nexport { quietProfiles };\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3SFso\\\":\\\"index.2380c2cc.js\\\",\\\"6HdLu\\\":\\\"quiet.a1692c74.wasm\\\",\\\"246eR\\\":\\\"quiet.worklet.dd17454f.js\\\"}\"));","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3SFso\", \"6HdLu\")","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3SFso\", \"246eR\")","/* eslint-disable import/no-unresolved */\nimport Quiet, { quietProfiles } from '@moxon6/quiet-js';\n\nconst audioContext = new AudioContext();\n\nasync function main() {\n  const quiet = await new Quiet(\n    audioContext,\n    quietProfiles.audible,\n  ).init();\n\n  function sendText(payload) {\n    quiet.transmit({\n      clampFrame: false,\n      payload,\n    });\n  }\n\n  document\n    .querySelector('#audible-text')\n    .addEventListener('submit', (e) => {\n      const { value } = e.target.querySelector('textarea');\n      sendText(value);\n      e.preventDefault();\n    });\n\n  const received = document\n    .querySelector('#received-text');\n\n  document\n    .querySelector('#start-listening')\n    .addEventListener('click', () => {\n      quiet.receive((data) => {\n        received.innerHTML += data.value;\n      });\n    });\n}\n\nmain();\n"],"names":["$60617f9edb24bb5cf3aae7544d816f6e$var$resumeIfSuspended","audioCtx","state","resume","$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$60617f9edb24bb5cf3aae7544d816f6e$var$allocateArrayOnStack","instance","arr","ret","exports","stackAlloc","Int8Array","memory","buffer","set","$60617f9edb24bb5cf3aae7544d816f6e$var$allocateStringOnStack","string","split","map","x","charCodeAt","$60617f9edb24bb5cf3aae7544d816f6e$var$sampleBufferSize","$60617f9edb24bb5cf3aae7544d816f6e$var$Transmitter","audioContext","destroyed","[object Object]","profile","clampFrame","stack","this","stackSave","cProfiles","stringify","cProfile","opt","quiet_encoder_profile_str","encoder","quiet_encoder_create","sampleRate","free","frameLength","quiet_encoder_clamp_frame_len","quiet_encoder_get_frame_len","samples","bufferSize","pointer","malloc","Float32Array","subarray","$60617f9edb24bb5cf3aae7544d816f6e$var$mallocArray","stackRestore","buf","payload","chunkSize","res","byteLength","frame","slice","push","$60617f9edb24bb5cf3aae7544d816f6e$var$chunkBuffer","t","currentTime","audioBuffer","createBuffer","framePointer","Uint8Array","quiet_encoder_send","quiet_encoder_emit","view","copyToChannel","audioBufferNode","AudioBufferSourceNode","connect","destination","start","duration","seconds","Promise","resolve","setTimeout","quiet_encoder_destroy","$60617f9edb24bb5cf3aae7544d816f6e$var$importObject","env","__sys_getpid","wasi_snapshot_preview1","proc_exit","clock_time_get","fd_close","fd_write","fd_seek","fd_read","module","getBundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","url","replace","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","err","matches","match","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","shift","divergeIndex","toParts","parts","apply","join","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$60617f9edb24bb5cf3aae7544d816f6e$export$42b331293767aa71","checksum_scheme","inner_fec_scheme","outer_fec_scheme","mod_scheme","frame_length","modulation","center_frequency","gain","interpolation","shape","samples_per_symbol","symbol_delay","excess_bandwidth","encoder_filters","dc_filter_alpha","resampler","delay","bandwidth","attenuation","filter_bank_size","$60617f9edb24bb5cf3aae7544d816f6e$export$9099ad97b570f7c","audioContext1","quietWasmBytes","fetch","then","arrayBuffer","WebAssembly","instantiate","window","audioWorklet","addModule","quietProcessorNode","AudioWorkletNode","processorOptions","str","selectProfile","transmit","TextEncoder","encode","destroy","onReceive","audioStream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","createMediaStreamSource","port","onmessage","e","data","$f7cc2df98f0dd786ece54ee206a6d458$var$audioContext","AudioContext","quiet","init","document","querySelector","addEventListener","value","target","preventDefault","received","receive","innerHTML","$f7cc2df98f0dd786ece54ee206a6d458$var$main"],"version":3,"file":"index.2380c2cc.js.map"}